/* Prettified by Source 2 Viewer - https://valveresourceformat.github.io */

@define InnerCornerEast: 0% 0%;
@define InnerCornerWest: 100% 100%;
@define InnerCornerNorth: 0% 100%;
@define InnerCornerSouth: 100% 0%;
@define InnerRadiusSoft: 0.1399;
@define InnerRadius: 0.14;
@define OuterRadius: 0.5;
@define OuterRadiusSoft: 0.51;
@define InnerRadiusSoft_SegmentHover: 0.1499;
@define InnerRadius_SegmentHover: 0.15;
@define OuterRadius_SegmentHover: 0.85;
@define OuterRadiusSoft_SegmentHover: 0.851;
@define RingColor_Clear: rgba(0, 0, 0, 0);
@define RingColor: rgba(0, 0, 0, 0.8);
@define RingColor_SegmentHover: rgba(255, 255, 255, 0.5);
CitadelRadialAbilitiesSegment
{
	width: 100%;
	height: 100%;
	z-index: 10000;
	overflow: noclip;
	padding: 10px;
	transition-property: opacity, background-color, margin;
	transition-duration: 0.125s;
	transition-timing-function: ease-out;
	transition-delay: 0.0s;
	opacity: 0.1;
}

.SegmentEast CitadelRadialAbilitiesSegment
{
	background-color: gradient( radial, InnerCornerEast, 0% 0%, 100% 100%, from( RingColor_Clear ), color-stop( InnerRadiusSoft, RingColor_Clear), color-stop( InnerRadius, RingColor ), color-stop( OuterRadius, RingColor_Clear ), color-stop( OuterRadiusSoft , RingColor_Clear ), to( RingColor_Clear ) );
}

.SegmentHover.SegmentEast CitadelRadialAbilitiesSegment
{
	background-color: gradient( radial, InnerCornerEast, 0% 0%, 100% 100%, from( RingColor_Clear ), color-stop( InnerRadiusSoft_SegmentHover, RingColor_Clear), color-stop( InnerRadius_SegmentHover, RingColor_SegmentHover ), color-stop( OuterRadius_SegmentHover, RingColor_Clear ), color-stop( OuterRadiusSoft_SegmentHover , RingColor_Clear ), to( RingColor_Clear ) );
}

.SegmentWest CitadelRadialAbilitiesSegment
{
	background-color: gradient( radial, InnerCornerWest, 0% 0%, 100% 100%, from( RingColor_Clear ), color-stop( InnerRadiusSoft, RingColor_Clear ), color-stop( InnerRadius, RingColor), color-stop( OuterRadius, RingColor_Clear), color-stop( OuterRadiusSoft , RingColor_Clear ), to( RingColor_Clear ) );
}

.SegmentHover.SegmentWest CitadelRadialAbilitiesSegment
{
	background-color: gradient( radial, InnerCornerWest, 0% 0%, 100% 100%, from( RingColor_Clear ), color-stop( InnerRadiusSoft_SegmentHover, RingColor_Clear), color-stop( InnerRadius_SegmentHover, RingColor_SegmentHover), color-stop( OuterRadius_SegmentHover, RingColor_Clear), color-stop( OuterRadiusSoft_SegmentHover , RingColor_Clear ), to( RingColor_Clear ) );
}

.SegmentNorth CitadelRadialAbilitiesSegment
{
	background-color: gradient( radial, InnerCornerNorth, 0% 0%, 100% 100%, from( RingColor_Clear ), color-stop( InnerRadiusSoft, RingColor_Clear ), color-stop( InnerRadius, RingColor), color-stop( OuterRadius, RingColor_Clear), color-stop( OuterRadiusSoft , RingColor_Clear ), to( RingColor_Clear ) );
}

.SegmentHover.SegmentNorth CitadelRadialAbilitiesSegment
{
	background-color: gradient( radial, InnerCornerNorth, 0% 0%, 100% 100%, from( RingColor_Clear ), color-stop( InnerRadiusSoft_SegmentHover, RingColor_Clear), color-stop( InnerRadius_SegmentHover, RingColor_SegmentHover), color-stop( OuterRadius_SegmentHover, RingColor_Clear), color-stop( OuterRadiusSoft_SegmentHover , RingColor_Clear ), to( RingColor_Clear ) );
}

.SegmentSouth CitadelRadialAbilitiesSegment
{
	background-color: gradient( radial, InnerCornerSouth, 0% 0%, 100% 100%, from( RingColor_Clear ), color-stop( InnerRadiusSoft, RingColor_Clear ), color-stop( InnerRadius, RingColor), color-stop( OuterRadius, RingColor_Clear), color-stop( OuterRadiusSoft , RingColor_Clear), to( RingColor_Clear) );
}

.SegmentHover.SegmentSouth CitadelRadialAbilitiesSegment
{
	background-color: gradient( radial, InnerCornerSouth, 0% 0%, 100% 100%, from( RingColor_Clear ), color-stop( InnerRadiusSoft_SegmentHover, RingColor_Clear), color-stop( InnerRadius_SegmentHover, RingColor_SegmentHover), color-stop( OuterRadius_SegmentHover, RingColor_Clear), color-stop( OuterRadiusSoft_SegmentHover , RingColor_Clear ), to( RingColor_Clear ) );
}

.open_radial CitadelRadialAbilitiesSegment
{
	transition-duration: 0.12s;
	transition-timing-function: ease-in;
	saturation: 0.0;
	opacity: 0.1;
}

.open_radial CitadelRadialAbilitiesSegment.IsNextAbilityAffordable
{
	saturation: 1.0;
	opacity: 1.0;
}

.IconBackground
{
	width: 100px;
	height: 100px;
	margin: 100px;
	border: 6px solid offWhite;
	background-color: transparent;
	border-radius: 50%;
	ui-scale: 100%;
	transition-property: ui-scale, background-color ;
	transition-duration: 0.015s;
	transition-timing-function: ease-in;
	transition-delay: 0.0s;
}

.HasAbilityLevel_0 .IconBackground
{
	border: 0px solid offWhite;
	background-color: offWhite;
}

.SegmentUpgradeSuccess .IconBackground,.SegmentUpgradeFail .IconBackground,.SegmentSelected .IconBackground,.SegmentHover .IconBackground
{
	ui-scale: 110%;
	background-color: offBlack;
}

.AbilityIcon
{
	width: 80%;
	height: 80%;
	transform: rotateZ( 45deg );
	horizontal-align: center;
	vertical-align: middle;
	wash-color: offWhite;
	transition-property: ui-scale, color ;
	transition-duration: 0.015s;
	transition-timing-function: ease-in;
	transition-delay: 0.0s;
}

.HasAbilityLevel_0 .AbilityIcon
{
	wash-color: offBlack;
}

.SegmentUpgradeSuccess .AbilityIcon,.SegmentUpgradeFail .AbilityIcon,.SegmentSelected .AbilityIcon,.SegmentHover .AbilityIcon
{
	ui-scale: 80%;
	wash-color: offWhite;
}

#AbilityPanel1 .AbilityLevel,#AbilityPanel1 .IconBackground
{
	horizontal-align: right;
	vertical-align: bottom;
}

#AbilityPanel2 .AbilityLevel,#AbilityPanel2 .IconBackground
{
	horizontal-align: right;
	vertical-align: top;
}

#AbilityPanel3 .AbilityLevel,#AbilityPanel3 .IconBackground
{
	horizontal-align: left;
	vertical-align: top;
}

#AbilityPanel4 .AbilityLevel,#AbilityPanel4 .IconBackground
{
	horizontal-align: left;
	vertical-align: bottom;
}

.AbilityUpgrades
{
	width: 100%;
	height: 100%;
}

.AbilityLevel
{
	width: 50px;
	height: 50px;
	border-radius: 33%;
	transform: rotateZ( 45deg );
	flow-children: right;
	vertical-align: center;
	horizontal-align: center;
}

.AbilityLevel1
{
	margin: 200px;
}

.AbilityLevel2
{
	margin: 250px;
}

.AbilityLevel3
{
	margin: 300px;
}

.HasAbilityLevel_0 .AbilityLevel1,.HasAbilityLevel_0.HasAbilityLevel_1 .AbilityLevel2,.HasAbilityLevel_0.HasAbilityLevel_1.HasAbilityLevel_2 .AbilityLevel3
{
	background-color: transparent;
	border: 2px solid offWhite;
}

.SegmentHover .IsNextAbilityAffordable.HasAbilityLevel_0 .AbilityLevel1,.SegmentHover .IsNextAbilityAffordable.HasAbilityLevel_0.HasAbilityLevel_1 .AbilityLevel2,.SegmentHover .IsNextAbilityAffordable.HasAbilityLevel_0.HasAbilityLevel_1.HasAbilityLevel_2 .AbilityLevel3
{
	border: 2px solid offWhite;
	background-color: transparent;
	animation-name: animPreviewPurchase;
	animation-duration: 0.5s;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
}

@keyframes 'animPreviewPurchase'
{
	0%
	{
		background-color: transparent;
	}
	
	50%
	{
		background-color: offWhite;
	}
	
	100%
	{
		background-color: transparent;
	}
	
}

.HasAbilityLevel_0.HasAbilityLevel_1 .AbilityLevel1,.HasAbilityLevel_0.HasAbilityLevel_1.HasAbilityLevel_2 .AbilityLevel2,.HasAbilityLevel_0.HasAbilityLevel_1.HasAbilityLevel_2.HasAbilityLevel_3 .AbilityLevel3
{
	background-color: offWhite;
	border: 0px solid offWhite;
}

.SegmentHover .HasAbilityLevel_0.HasAbilityLevel_1 .AbilityUpgrades .AbilityLevel1,.SegmentHover .HasAbilityLevel_0.HasAbilityLevel_1.HasAbilityLevel_2 .AbilityUpgrades .AbilityLevel2,.SegmentHover .HasAbilityLevel_0.HasAbilityLevel_1.HasAbilityLevel_2.HasAbilityLevel_3 .AbilityUpgrades .AbilityLevel3
{
	animation-name: none;
	background-color: offWhite;
	border: 0px solid offWhite;
}

