<!-- kv3 encoding:text:version{e21c7f3c-8a33-41c5-9977-a76d3a32aa0d} format:generic:version{7412167c-06e9-4698-aff2-e63eb59037e7} -->
{
	generic_data_type = "CitadelGenericData_t"
	m_mapDamageFlash = 
	{
		EFlashType_BulletDamage = 
		{
			m_flDuration = 0.250000
			m_flCoverage = 0.500000
			m_flHardness = 0.700000
			m_flBrightness = 1.200000
			m_Color = 
			[
				255,
				0,
				0,
			]
		}
		EFlashType_TechDamage = 
		{
			m_flDuration = 0.250000
			m_flCoverage = 0.500000
			m_flHardness = 0.500000
			m_flBrightness = 1.500000
			m_Color = 
			[
				35,
				17,
				236,
			]
		}
		EFlashType_Healing = 
		{
			m_flDuration = 1.000000
			m_flCoverage = 0.500000
			m_flHardness = 0.000000
			m_flBrightness = 1.200000
			m_Color = 
			[
				0,
				195,
				45,
			]
			m_flBrightnessInLightSensitivityMode = 0.600000
		}
		EFlashType_CritDamage = 
		{
			m_flDuration = 0.330000
			m_flCoverage = 0.600000
			m_flHardness = 0.900000
			m_flBrightness = 1.700000
			m_Color = 
			[
				255,
				255,
				0,
			]
		}
		EFlashType_MeleeActivate = 
		{
			m_flDuration = 0.275000
			m_flCoverage = 0.500000
			m_Color = 
			[
				254,
				101,
				40,
			]
			m_flBrightness = 3.000000
			m_flHardness = 0.000000
		}
	}
	m_GlitchSettings = 
	{
		m_flStrength = 1.000000
		m_nQuantizeType = 2.000000
		m_flQuantizeScale = 0.500000
		m_flQuantizeStrength = 0.200000
		m_flFrameRate = 5.000000
		m_flSpeed = 10.000000
		m_flJumpStrength = 1.000000
		m_flDistortStrength = 1.250000
		m_flWhiteNoiseStrength = 3.000000
		m_flScanlineStrength = 1.500000
		m_flBreakupStrength = 0.000000
	}
	m_LaneInfo = 
	[
		
		{
			m_strLaneName = "Yellow"
			m_strCSSClass = "yellowLane"
			m_Color = 
			[
				241,
				204,
				48,
			]
			m_MinimapZiplineColorOverride = 
			[
				190,
				169,
				78,
			]
			m_ObjectiveColor = 
			[
				249,
				212,
				5,
			]
		},
		
		{
			m_strLaneName = "Yellow + Orange"
			m_Color = 
			[
				0,
				0,
				0,
			]
		},
		
		{
			m_strLaneName = "Green"
			m_strCSSClass = "greenLane"
			m_Color = 
			[
				255,
				20,
				147,
			]
			m_MinimapZiplineColorOverride = 
			[
				255,
				20,
				147,
			]
			m_ObjectiveColor = 
			[
				255,
				20,
				147,
			]
		},
		
		{
			m_strLaneName = "Blue"
			m_strCSSClass = "blueLane"
			m_Color = 
			[
				41,
				177,
				204,
			]
			m_MinimapZiplineColorOverride = 
			[
				85,
				155,
				190,
			]
			m_ObjectiveColor = 
			[
				67,
				125,
				220,
			]
		},
		
		{
			m_strLaneName = " + Purple"
			m_Color = 
			[
				0,
				0,
				0,
			]
		},
		
		{
			m_strLaneName = "Purple"
			m_strCSSClass = "purpleLane"
			m_Color = 
			[
				89,
				178,
				71,
			]
			m_MinimapZiplineColorOverride = 
			[
				102,
				153,
				92,
			]
			m_ObjectiveColor = 
			[
				89,
				178,
				71,
			]
		},
	]
	m_NoLaneZip = 
	{
		m_strLaneName = "NoLane"
		m_strCSSClass = "noLane"
		m_Color = 
		[
			0,
			0,
			0,
		]
	}
	m_DamageReceivedSounds = 
	{
		m_strDamageReceiveDefault = soundevent:"Damage.Receive.Default"
		m_strDamageReceiveNPC = soundevent:"Damage.Receive.NPC"
		m_strDamageReceiveDOT = soundevent:"Damage.Receive.DOT"
		m_strDamageReceiveMeleeNPC = soundevent:"Damage.Receive.Melee.NPC"
		m_strDamageReceiveMelee = soundevent:"Damage.Receive.Melee"
		m_strDamageReceiveShield = soundevent:"Damage.Receive.Shield"
	}
	m_DefaultDOF = 
	{
		m_flDofNearBlurry = 0.000000
		m_flDofNearCrisp = 0.000000
		m_flDofFarBlurry = 0.000000
		m_flDofFarCrisp = 0.000000
	}
	m_NewPlayerMetrics = 
	[
		
		{
			m_strSkillTierName = "Bronze"
			m_NetWorth = 1000
			m_DamageTaken = 6600
			m_BossDamage = 300
			m_PlayerDamage = 900
			m_LastHits = 1
			m_OrbsSecured = 1
			m_OrbsDenied = 1
			m_AbilitiesUpgraded = 1
			m_ModsPurchased = 1
		},
		
		{
			m_strSkillTierName = "Silver"
			m_NetWorth = 1000
			m_DamageTaken = 5800
			m_BossDamage = 400
			m_PlayerDamage = 1400
			m_LastHits = 1
			m_OrbsSecured = 1
			m_OrbsDenied = 1
			m_AbilitiesUpgraded = 1
			m_ModsPurchased = 1
		},
		
		{
			m_strSkillTierName = "Gold"
			m_NetWorth = 1000
			m_DamageTaken = 5000
			m_BossDamage = 600
			m_PlayerDamage = 1800
			m_LastHits = 1
			m_OrbsSecured = 1
			m_OrbsDenied = 1
			m_AbilitiesUpgraded = 1
			m_ModsPurchased = 1
		},
		
		{
			m_strSkillTierName = "Platinum"
			m_NetWorth = 1000
			m_DamageTaken = 4600
			m_BossDamage = 700
			m_PlayerDamage = 2300
			m_LastHits = 1
			m_OrbsSecured = 1
			m_OrbsDenied = 1
			m_AbilitiesUpgraded = 1
			m_ModsPurchased = 1
		},
	]
	m_MinimapTeamRebelsColor = 
	[
		58,
		91,
		66,
	]
	m_MinimapTeamCombineColor = 
	[
		83,
		51,
		51,
	]
	m_HeroTestingTargetDummyUpgrades = 
	[
		"upgrade_toughness_2",
		"upgrade_health_regen_1",
		"upgrade_toughness_3",
		"upgrade_health_percent_large",
		"upgrade_out_of_combat_health_regen",
		"upgrade_zipine_mastery",
	]
	m_mapStatTypeImages = 
	{
		EBaseHealthRegen = "file://{images}/upgrades/mods_armor/health_regen.psd"
		EBulletArmorDamageReduction = "file://{images}/upgrades/mods_armor/bullet_armor.psd"
		ETechArmorDamageReduction = "file://{images}/upgrades/mods_armor/tech_armor.psd"
	}
	m_nItemPricePerTier = 
	[
		0,
		800,
		1600,
		3200,
		6400,
		9999,
	]
	m_flLanePhaseGoldShareFrac = 
	[
		1.000000,
		0.650000,
		0.300000,
		0.200000,
		0.150000,
		0.110000,
	]
	m_flPostLanePhaseGoldShareFrac = 
	[
		1.000000,
		0.650000,
		0.300000,
		0.200000,
		0.150000,
		0.110000,
	]
	m_AimSpringStrength = 
	[
		0.000000,
		2.000000,
		10.000000,
		300.000000,
	]
	m_TargetingSpringStrength = 
	[
		0.000000,
		2.000000,
		10.000000,
		30.000000,
	]
	m_IdolParams = 
	{
		m_IdolModel = resource_name:"models/props_gameplay/idol_urn/idol_urn.vmdl"
		m_strLoopingSequenceName = "golden_idol_idle"
		m_ParachuteModel = resource_name:"models/props_gameplay/gold_crate_parachute.vmdl"
		m_CrateModel = resource_name:"models/props_gameplay/gold_crate.vmdl"
		m_IdolReturnLocationParticle = resource_name:"particles/environment/soul_jar_return_location.vpcf"
		m_flIdolReturnLocationParticleScale = 2.000000
		m_IdolSpawnLocationParticle = resource_name:"particles/environment/soul_jar_summon.vpcf"
		m_IdolDroppingParticle = resource_name:"particles/environment/soul_jar_drop.vpcf"
		m_flIdolDropHeight = 1400.000000
		m_flIdolDropDuration = 12.500000
	}
	m_ObjectiveParams = 
	{
		m_GoldPerOrb = 40
		m_nTier1GoldKill = 175
		m_nTier1GoldOrbs = 100
		m_nTier2GoldKill = 500
		m_nTier2GoldOrbs = 250
		m_nBaseGuardiansGoldKill = 85
		m_nBaseGuardiansGoldOrbs = 40
		m_nShrinesGoldKill = 0
		m_nShrinesGoldOrbs = 0
		m_nPatronPhase1GoldKill = 0
		m_nPatronPhase1GoldOrbs = 0
	}
	m_TeleporterParams = 
	{
		m_StartEffect = resource_name:"particles/environment/teleporter_pad_start.vpcf"
		m_EndEffect = resource_name:"particles/environment/teleporter_pad_end.vpcf"
		m_strEnterSound = soundevent:"Teleport.Enter"
		m_strStartSound = soundevent:"Teleport.Buildup"
		m_strTeleportedSound = soundevent:"Teleport.Appear"
	}
	m_CurrencyTypeSounds = 
	{
		EAbilityPoints = 
		{
			m_mapSourceSounds = 
			{
				EBossKill = soundevent:"Player.AcquireAp"
				ECheats = soundevent:"Player.AcquireAp"
				ELevelUp = soundevent:"Player.AcquireAp"
			}
		}
		EGold = 
		{
			m_mapSourceSounds = 
			{
				EItemSale = soundevent:""
				ETreasureChest = soundevent:""
				EOrbPlayer = soundevent:"Player.ClaimOrb"
				EOrbDeny = soundevent:"Player.ClaimOrb"
				EOrbLaneTrooper = soundevent:"Player.ClaimOrb"
				EOrbNeutralTrooper = soundevent:"Player.ClaimOrb"
				EOrbTier1TrooperBoss = soundevent:"Player.ClaimOrb"
				EOrbTier2TrooperBoss = soundevent:"Player.ClaimOrb"
				EOrbTier3TrooperBoss = soundevent:"Player.ClaimOrb"
				EOrbBaseSentry = soundevent:"Player.ClaimOrb"
				EOrbDeployable = soundevent:"Player.ClaimOrb"
				EOrbTrophyKill = soundevent:"Player.ClaimOrb"
				EOrbTreasureChest = soundevent:"Player.ClaimOrb"
				ENeutralWorldPickup = soundevent:"Neutral.Bounty.Pickup"
				EItemPurchase = soundevent:"Player.PurchaseUpgrade"
				EItemUpgrade = soundevent:"Player.PurchaseUpgrade"
			}
		}
	}
	m_mapResourceTypes = 
	{
		EResourceType_Rage = 
		{
			m_strHUDSnippetName = "rage"
			m_strCantCastOutOfResourceToken = "#CITADEL_ABILITY_INVALID_NOT_RAGE"
		}
	}
	m_HealingReceivedSounds = 
	{
		m_strHealingInBaseLoop = soundevent:"Player.Heal.Base.Loop"
		m_strHealingInBaseToppedOff = soundevent:"Player.Heal.BaseEnd"
		m_strDirectHealing = soundevent:""
		m_strHealingInBaseStart = soundevent:"Player.Heal.BaseStart"
	}
	m_DamageIndicatorSounds = 
	{
		m_strDamageDefault = soundevent:"Damage.Send"
		m_strDamageCrit = soundevent:"Damage.Send.Crit"
		m_strDamageLethal = soundevent:"Damage.Send.Lethal"
		m_strDamageInvulnerable = soundevent:"Damage.Send.Invulnerable"
		m_strDamageDOT = soundevent:"Damage.Send.DOT"
		m_strDamageHealthTransfer = soundevent:"Player.Heal.SiphonTick"
	}
	m_RejuvParams = 
	{
		m_flRejuvinatorExpirationWarningTiming = 30
		m_flRejuvinatorBuffDuration = 240
		m_flRejuvinatorDropHeight = 752
		m_flRejuvinatorDropHeight3LaneMap = 500
		m_flRejuvinatorDropDuration = 9
		m_strRejuvPickupSound = soundevent:"Rejuv.Pickup"
		m_TrooperHealthMult = 
		[
			2.000000,
			2.300000,
			2.600000,
		]
		m_PlayerRespawnMult = 
		[
			0.500000,
			0.400000,
			0.300000,
		]
	}
	m_ShoppingEffect = resource_name:"particles/generic/hero_shopping_status.vpcf"
	m_MinimapZiplinesParticle = resource_name:"particles/ui/ui_minimap.vpcf"
	m_KillStreakFireParticle = resource_name:"particles/ui/ui_topbar_killstreak.vpcf"
	m_MidbossIndicatorRespawningParticle = resource_name:"particles/environment/rejuv_indicator_timer.vpcf"
	m_MidbossIndicatorSpawnedParticle = resource_name:"particles/environment/rejuv_indicator.vpcf"
	m_enemyObjectivesAndZiplineColor = 
	[
		220,
		76,
		47,
		null,
	]
	m_enemyObjectivesColor = 
	[
		220,
		76,
		47,
	]
	m_enemyZiplineColor = 
	[
		140,
		55,
		38,
	]
	m_vecWeaponGroups = 
	[
		
		{
			m_vecUpgrades = 
			[
				"upgrade_clip_size",
				"upgrade_active_reload",
				"upgrade_intensifying_clip",
				"upgrade_titan_round",
				"upgrade_infinitemagazine",
				"upgrade_reinforcing_casings",
			]
			m_eShopGroup = "EMagazines"
		},
		
		{
			m_eShopGroup = "ERateOfFire"
			m_vecUpgrades = 
			[
				"upgrade_rapid_rounds",
				"upgrade_blitz_bullets",
				"upgrade_burst_fire",
				"upgrade_ricochet",
			]
		},
		
		{
			m_eShopGroup = "EBulletVelocity"
			m_vecUpgrades = 
			[
				"upgrade_weighted_shots",
				"upgrade_high_velocity_mag",
				"upgrade_long_range",
				"upgrade_split_shot",
				"upgrade_pristine_emblem",
				"upgrade_sharpshooter",
				"upgrade_aprounds",
			]
		},
		
		{
			m_eShopGroup = "EHeadshotEnthusiasts"
			m_vecUpgrades = 
			[
				"upgrade_headshot_booster",
				"upgrade_headshot_booster2",
				"upgrade_headhunter",
				"upgrade_banshee_slugs",
			]
		},
		
		{
			m_eShopGroup = "EWeaponRange"
			m_vecUpgrades = 
			[
				"upgrade_close_range",
				"upgrade_close_quarter_combat",
				"upgrade_bullet_armor_reduction_aura",
				"upgrade_cloaking_device_active",
				"upgrade_proc_silence",
			]
		},
		
		{
			m_eShopGroup = "ETankingBullets"
			m_vecUpgrades = 
			[
				"upgrade_melee_charge",
				"upgrade_berserker",
				"upgrade_fervor",
			]
		},
		
		{
			m_eShopGroup = "ESpiritSlinger"
			m_vecUpgrades = 
			[
				"upgrade_crackshot",
				"upgrade_tech_defense_shredders",
				"upgrade_spellslinger_headshots",
				"upgrade_chain_lightning",
				"upgrade_tech_overflow",
			]
		},
		
		{
			m_eShopGroup = "EActives"
			m_vecUpgrades = 
			[
				"upgrade_fleetfoot_boots",
				"upgrade_thermal_detonator",
				"upgrade_dps_aura",
				"upgrade_warp_stone",
			]
		},
		
		{
			m_eShopGroup = "EMisc"
			m_vecUpgrades = 
			[
				"upgrade_hollow_point_rounds",
				"upgrade_non_player_bonus",
				"upgrade_kinetic_sash",
				"upgrade_toxic_bullets",
				"upgrade_critshot",
			]
		},
		
		{
			m_eShopGroup = "ESlowingBullets"
			m_vecUpgrades = 
			[
				"upgrade_slowing_bullets",
				"upgrade_glass_cannon",
			]
		},
	]
	m_vecArmorGroups = 
	[
		
		{
			m_eShopGroup = "EMoreHealth"
			m_vecUpgrades = 
			[
				"upgrade_health",
				"upgrade_health_2",
				"upgrade_chonky",
				"upgrade_colossus",
				"upgrade_unstoppable",
			]
		},
		
		{
			m_eShopGroup = "EHealing"
			m_vecUpgrades = 
			[
				"upgrade_medic_bullets",
				"upgrade_health_stimpak",
				"upgrade_health_nova",
				"upgrade_rescue_beam",
			]
		},
		
		{
			m_eShopGroup = "ERevitalization"
			m_vecUpgrades = 
			[
				"upgrade_endurance",
				"upgrade_restorative_locket",
				"upgrade_vex_barrier",
				"upgrade_healing_booster",
				"upgrade_healbuff",
			]
		},
		
		{
			m_eShopGroup = "EDebuffs"
			m_vecUpgrades = 
			[
				"upgrade_debuff_reducer",
				"upgrade_reduce_debuff_duration",
				"upgrade_inhibitor",
			]
		},
		
		{
			m_eShopGroup = "ESpiritProtection"
			m_vecUpgrades = 
			[
				"upgrade_tech_armor",
				"upgrade_magic_shield",
				"upgrade_tech_purge",
				"upgrade_cheat_death",
				"upgrade_absorbing_armor",
				"upgrade_phantom_strike",
				"upgrade_spellbreaker",
			]
		},
		
		{
			m_eShopGroup = "EBulletProtection"
			m_vecUpgrades = 
			[
				"upgrade_return_fire",
				"upgrade_regenerating_bullet_shield",
				"upgrade_bullet_armor",
				"upgrade_improved_bullet_armor",
				"upgrade_deflecting_armor",
			]
		},
		
		{
			m_eShopGroup = "ELifesteal"
			m_vecUpgrades = 
			[
				"upgrade_vampire",
				"upgrade_surging_power",
				"upgrade_health_stealing_magic",
				"upgrade_infuser",
				"upgrade_damage_recycler",
			]
		},
		
		{
			m_eShopGroup = "EMelee"
			m_vecUpgrades = 
			[
				"upgrade_lifestrike_gauntlets",
				"upgrade_melee_rebuttal",
				"upgrade_boxing_glove",
			]
		},
		
		{
			m_eShopGroup = "EMovementAndAgility"
			m_vecUpgrades = 
			[
				"upgrade_improved_stamina",
				"upgrade_sprint_booster",
				"upgrade_cardio_calibrator",
				"upgrade_superior_stamina",
				"upgrade_rocket_booster",
				"upgrade_juggernaut",
			]
		},
		
		{
			m_eShopGroup = "EAntiHealing"
			m_vecUpgrades = 
			[
				"upgrade_healbane",
			]
		},
		
		{
			m_eShopGroup = "EAdditionalProtection"
			m_vecUpgrades = 
			[
				"upgrade_weapon_shielding",
				"upgrade_spirit_bubble",
				"upgrade_savior",
				"upgrade_metal_skin",
				"upgrade_veil_walker",
				"upgrade_siphon_bullets",
				"upgrade_diviners_kevlar",
			]
		},
	]
	m_vecSpiritGroups = 
	[
		
		{
			m_eShopGroup = "EMoreSpirit"
			m_vecUpgrades = 
			[
				"upgrade_improved_spirit",
				"upgrade_magic_storm",
				"upgrade_soaring_spirit",
				"upgrade_boundless_spirit",
			]
		},
		
		{
			m_eShopGroup = "EBurstDamage"
			m_vecUpgrades = 
			[
				"upgrade_magic_burst",
				"upgrade_quick_silver",
				"upgrade_magic_shock",
				"upgrade_ultimate_burst",
			]
		},
		
		{
			m_eShopGroup = "ESpiritRange"
			m_vecUpgrades = 
			[
				"upgrade_magic_reach",
				"upgrade_arcane_surge",
				"upgrade_tech_range",
			]
		},
		
		{
			m_eShopGroup = "EDuration"
			m_vecUpgrades = 
			[
				"upgrade_arcane_extension",
				"upgrade_imbued_duration_extender",
				"upgrade_magic_carpet",
				"upgrade_spirit_burn",
			]
		},
		
		{
			m_eShopGroup = "ECharges"
			m_vecUpgrades = 
			[
				"upgrade_extra_charge",
				"upgrade_rapid_recharge",
			]
		},
		
		{
			m_eShopGroup = "ECooldown"
			m_vecUpgrades = 
			[
				"upgrade_magic_tempo",
				"upgrade_cooldown_reduction",
				"upgrade_ability_power_shard",
			]
		},
		
		{
			m_eShopGroup = "EMeleeSpirit"
			m_vecUpgrades = 
			[
				"upgrade_acolytes_glove",
				"upgrade_spirit_snatch",
			]
		},
		
		{
			m_eShopGroup = "ESlowingMagic"
			m_vecUpgrades = 
			[
				"upgrade_suppressor",
				"upgrade_magic_slow",
				"upgrade_tech_bleed",
			]
		},
		
		{
			m_eShopGroup = "EMagicVulnerability"
			m_vecUpgrades = 
			[
				"upgrade_magic_vulnerability",
				"upgrade_escalating_exposure",
			]
		},
		
		{
			m_eShopGroup = "ECrownControl"
			m_vecUpgrades = 
			[
				"upgrade_containment",
				"upgrade_target_stun",
				"upgrade_aoe_root",
			]
		},
		
		{
			m_eShopGroup = "EAntiGun"
			m_vecUpgrades = 
			[
				"upgrade_withering_whip",
				"upgrade_greater_withering_whip",
			]
		},
		
		{
			m_eShopGroup = "EMiscSpirit"
			m_vecUpgrades = 
			[
				"upgrade_mystic_regeneration",
				"upgrade_bullet_resist_shredder",
				"upgrade_tech_damage_pulse",
			]
		},
		
		{
			m_eShopGroup = "EActives"
			m_vecUpgrades = 
			[
				"upgrade_spirit_sap",
				"upgrade_rupture",
				"upgrade_cold_front",
				"upgrade_self_bubble",
				"upgrade_targeted_silence",
				"upgrade_glitch",
				"upgrade_discord",
				"upgrade_focus_lens",
				"upgrade_ability_refresher",
			]
		},
	]
	m_MiniMapOffsets = 
	[
		
		{
			eEntityClass = "CLASS_BOSS_TIER_3"
			vOffset2D = 
			[
				0.000000,
				1000.000000,
			]
			iLane = 0
		},
		
		{
			eEntityClass = "CLASS_BOSS_BARRACKS"
			iLane = 1
			vOffset2D = 
			[
				500.000000,
				0.000000,
			]
		},
		
		{
			eEntityClass = "CLASS_BOSS_BARRACKS"
			iLane = 6
			vOffset2D = 
			[
				500.000000,
				0.000000,
			]
		},
		
		{
			eEntityClass = "CLASS_DESTROYABLE_BUILDING"
			vOffset2D = 
			[
				0.000000,
				400.000000,
			]
		},
	]
}