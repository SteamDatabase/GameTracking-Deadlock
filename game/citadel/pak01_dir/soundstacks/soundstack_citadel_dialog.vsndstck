<!-- kv3 encoding:text:version{e21c7f3c-8a33-41c5-9977-a76d3a32aa0d} format:generic:version{7412167c-06e9-4698-aff2-e63eb59037e7} -->
{
	citadel_dialog = 
	{
		operators = 
		[
			
			{
				name = "_builtins"
				operator = "sos_builtins"
				_voicegraph = "citadel.hrtf_basic"
			},
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					citadel_perspective_default = 
					{
						data_type = "public_opvar"
						value = "citadel_perspective_default"
					}
					dialog_priority_group_name = 
					{
						data_type = "string"
						value = "dialog_mix_priority"
						_system_properties = 
						{
							display_group = "locked"
							property_group = "citadel_dialog"
							property_help = "Sets the branching group name."
						}
					}
					dialog_mix_priority = 
					{
						data_type = "float"
						value = "9999.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_dialog"
							property_help = "A value that determines mix and playback behavior."
						}
					}
					dialog_priority_mix_limit = 
					{
						data_type = "float"
						value = "9999.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_dialog"
							property_help = "A value that determines mix and playback behavior. -1 is undefined."
						}
					}
					low_priority_vol_atten_db = 
					{
						data_type = "float"
						value = "-16.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_dialog"
							property_help = "The db value to duck low priority dialog."
						}
					}
					low_priority_vol_filter_rate = 
					{
						data_type = "float"
						value = "200.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_dialog"
							property_help = "The speed with which volume changes are made."
						}
					}
					scale_priority_over_distance = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_dialog"
							property_help = "Scales the priority between a min and max distance."
						}
					}
					priority_scale_min_distance = 
					{
						data_type = "float"
						value = "2000.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_dialog"
							property_help = "Scales the priority between a min and max distance."
						}
					}
					priority_scale_max_distance = 
					{
						data_type = "float"
						value = "2500.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_dialog"
							property_help = "Scales the priority between a min and max distance."
						}
					}
					priority_scale_floor = 
					{
						data_type = "float"
						value = "-1.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_dialog"
							property_help = "The minimum scaled priority value when at max distance."
						}
					}
					enable_combat_blocking = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_dialog"
							property_help = "Cull dialog lines below a given priority during combat."
						}
					}
					combat_blocking_priority_threshold = 
					{
						data_type = "float"
						value = "-9999.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_dialog"
							property_help = "The priority equal or below that will be blocked by combat."
						}
					}
					health_volume_enabled = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							property_group = "citadel_dialog - health"
							display_group = "Advanced"
							property_help = "When enabled, the volume of the sound event will change after a teammate's health has been lowered past the value set on 'low_health_fraction_vol_offset_threshold'."
						}
					}
					low_health_fraction_vol_offset_threshold = 
					{
						data_type = "float"
						value = "0.0"
						_system_properties = 
						{
							property_group = "citadel_dialog - health"
							display_group = "Normal"
							property_help = "The percentage of the entity's health, under which the volume offset should be added. Ex. Set this to 0.3 to apply a volume change when the entity is below 30% health."
						}
					}
					low_health_volume_offset_db = 
					{
						data_type = "float"
						value = "0.0"
						_system_properties = 
						{
							property_group = "citadel_dialog - health"
							display_group = "Normal"
							property_help = "The amount in decibels that a teammate's VO will be changed after crossing the low health threshold."
						}
					}
				}
			},
			
			{
				name = "private"
				operator = "util_null"
				operator_variables = 
				{
					cached_priority = 
					{
						data_type = "float"
						value = "-1.000000"
					}
				}
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "convar_get_debug_enabled"
				operator = "convar_get"
				input_execute = "1.0"
				convar = "audio_display_soundstack_debug_dialog"
			},
			
			{
				name = "cache_priority"
				operator = "opvar_set_float"
				input = "@public.dialog_mix_priority"
				input_execute = "1.0"
				execute_once = "1.0"
				input_stack_name = ""
				input_operator_name = "private"
				input_field_name = "cached_priority"
				input_use_namespace = "true"
			},
			
			{
				name = "source_info"
				operator = "game_get_source_info"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "get_entity_info"
				input_execute = "1"
				operator = "game_entity_info"
				input_entity_index = "@source_info.output_entity_index"
				input_default_world_position = "@public.position"
				input_default_local_position = "@globals.output_listener_front"
				input_hold_position_on_deleted_entity = "@public.hold_position_on_deleted_entity"
				use_world_position = "@public.position_force_from_input"
				attachment = "@public.attachment"
			},
			
			{
				name = "get_entity_health"
				operator = "game_entity_get_health"
				input_execute = "@public.health_volume_enabled"
				input_entity = "@source_info.output_entity_index"
			},
			
			{
				name = "get_dealt_recent_damage"
				operator = "opvar_get_float"
				input_execute = "1.0"
				execute_once = "1.0"
				input_stack_name = "citadel_dialog_opvars"
				input_operator_name = "opvars"
				input_field_name = "dealt_recent_damage"
			},
			
			{
				name = "get_received_recent_damage"
				operator = "opvar_get_float"
				input_execute = "1.0"
				execute_once = "1.0"
				input_stack_name = "citadel_dialog_opvars"
				input_operator_name = "opvars"
				input_field_name = "received_recent_damage"
			},
			
			{
				name = "get_enemy_is_in_proximity"
				operator = "opvar_get_float"
				input_execute = "1.0"
				execute_once = "1.0"
				input_stack_name = "citadel_dialog_opvars"
				input_operator_name = "opvars"
				input_field_name = "is_enemy_in_proximity"
			},
			
			{
				name = "test_priority_below_combat_blocking_threshold"
				operator = "math_float"
				execute_once = "1.0"
				input_execute = "1.0"
				apply = "less_than_or_equal"
				input1 = "@public.dialog_mix_priority"
				input2 = "@public.combat_blocking_priority_threshold"
			},
			
			{
				name = "math_add_combat_criteria"
				operator = "math_accumulate12_float"
				execute_once = "1.0"
				apply = "add"
				input1 = "@get_dealt_recent_damage.output"
				input2 = "@get_received_recent_damage.output"
				input3 = "@get_enemy_is_in_proximity.output"
				input4 = "0.0"
				input5 = "0.0"
				input6 = "0.0"
				input7 = "0.0"
				input8 = "0.0"
				input9 = "0.0"
				input10 = "0.0"
				input11 = "0.0"
				input12 = "0.0"
			},
			
			{
				name = "test_is_in_combat"
				operator = "math_float"
				execute_once = "1.0"
				input_execute = "1.0"
				apply = "greater_than"
				input1 = "@math_add_combat_criteria.output"
				input2 = "0.0"
			},
			
			{
				name = "test_should_block_low_priority_dialog"
				operator = "math_accumulate12_float"
				execute_once = "1.0"
				apply = "mult"
				input1 = "@test_is_in_combat.output"
				input2 = "1.0"
				input3 = "1.0"
				input4 = "@public.enable_combat_blocking"
				input5 = "@test_priority_below_combat_blocking_threshold.output"
				input6 = "1.0"
				input7 = "1.0"
				input8 = "1.0"
				input9 = "1.0"
				input10 = "1.0"
				input11 = "1.0"
				input12 = "1.0"
			},
			
			{
				name = "priority_blocking_message"
				operator = "math_string"
				input_execute = "@test_should_block_low_priority_dialog.output"
				execute_once = "1.0"
				apply = "add"
				input1 = "@get_event_info.output_soundevent_name"
				input2 = " - blocked, at or below threshold."
			},
			
			{
				name = "print_priority_blocking"
				operator = "util_print_string"
				execute_once = "1.0"
				input_execute = "@test_should_block_low_priority_dialog.output"
				input = "@priority_blocking_message.output_string"
			},
			
			{
				name = "block_priority"
				operator = "sos_goto"
				execute_once = "1.0"
				input_goto_end = "true"
				input_execute = "@test_should_block_low_priority_dialog.output"
			},
			
			{
				name = "distance_to_source"
				operator = "calc_distance"
				input_position1 = "@get_entity_info.output_position"
				input_position2 = "@globals.output_listener_position"
			},
			
			{
				name = "outside_max_distance"
				operator = "math_float"
				input_execute = "1.0"
				apply = "greater_than"
				input1 = "@distance_to_source.output"
				input2 = "@public.priority_scale_max_distance"
			},
			
			{
				name = "blocking_enabled"
				operator = "math_float"
				input_execute = "1.0"
				apply = "mult"
				input1 = "@public.scale_priority_over_distance"
				input2 = "@outside_max_distance.output"
			},
			
			{
				name = "blocking_message"
				operator = "math_string"
				input_execute = "@blocking_enabled.output"
				apply = "add"
				input1 = "@get_event_info.output_soundevent_name"
				input2 = " - blocked, outside max distance (citadel_dialog)."
			},
			
			{
				name = "blocking_message_enabled"
				operator = "math_float"
				input_execute = "@blocking_enabled.output"
				apply = "mult"
				input1 = "@convar_get_debug_enabled.output"
				input2 = "@outside_max_distance.output"
			},
			
			{
				name = "print_blocking"
				operator = "util_print_string"
				input_execute = "@blocking_message_enabled.output"
				input = "@blocking_message.output_string"
			},
			
			{
				name = "block_distance"
				operator = "sos_goto"
				input_goto_end = "true"
				execute_once = "1.000000"
				input_execute = "@blocking_enabled.output"
			},
			
			{
				name = "remap_priority"
				operator = "math_remap_float"
				input = "@distance_to_source.output"
				input_execute = "@public.scale_priority_over_distance"
				input_min = "@public.priority_scale_min_distance"
				input_max = "@public.priority_scale_max_distance"
				input_map_min = "@private.cached_priority"
				input_map_max = "@public.priority_scale_floor"
				default_to_max = "false"
			},
			
			{
				name = "overwrite_scaled_priority"
				operator = "opvar_set_float"
				input = "@remap_priority.output"
				input_execute = "@public.scale_priority_over_distance"
				input_stack_name = ""
				input_operator_name = "public"
				input_field_name = "dialog_mix_priority"
				input_use_namespace = "true"
			},
			
			{
				name = "citadel_find_perspective"
				operator = "sos_import_stack"
				import_stack = "citadel_find_perspective"
				auto_connect_public_fields = "true"
			},
			
			{
				name = "join_dialog_priority_group"
				input_execute = "1.0"
				execute_once = "true"
				operator = "soundevent_group_join"
				input_group_name = "@public.dialog_priority_group_name"
			},
			
			{
				name = "get_dialog_priority_kv3_max"
				execute_once = "false"
				input_execute = "1.0"
				operator = "soundevent_group_get_float"
				input_group_result = "@join_dialog_priority_group.output_result"
				input_name = "max"
			},
			
			{
				name = "get_group_result_info"
				input_execute = "1.0"
				execute_once = "true"
				operator = "soundevent_group_info"
				input_group_result = "@join_dialog_priority_group.output_result"
			},
			
			{
				name = "priority_less_than_max"
				operator = "math_float"
				input_execute = "1.0"
				apply = "less_than"
				input1 = "@public.dialog_mix_priority"
				input2 = "@get_dialog_priority_kv3_max.output"
			},
			
			{
				name = "check_health_volume_enabled"
				operator = "math_float"
				apply = "mult"
				input1 = "@public.health_volume_enabled"
				input2 = "@citadel_find_perspective::math_perspective_is_team.output"
			},
			
			{
				name = "check_health_below_threshold"
				operator = "math_float"
				apply = "less_than_or_equal"
				input_execute = "@check_health_volume_enabled.output"
				input2 = "@public.low_health_fraction_vol_offset_threshold"
				input1 = "@get_entity_health.output_normalized"
			},
			
			{
				name = "switch_health_volume"
				operator = "ctrl_switch_float"
				input_switch = "@check_health_below_threshold.output"
				input1 = "0.0"
				input2 = "@public.low_health_volume_offset_db"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@get_dialog_priority_kv3_max.output_success"
				input2 = "@priority_less_than_max.output"
				input3 = "@public.low_priority_vol_atten_db"
				input4 = "1.0"
				input5 = "1.0"
				input6 = "1.0"
				input7 = "1.0"
				input8 = "1.0"
				input9 = "1.0"
				input10 = "1.0"
				input11 = "1.0"
				input12 = "1.0"
			},
			
			{
				name = "volume_filter"
				operator = "math_filter_float"
				input = "@volume_accumulate.output"
				input_max_velocity = "@public.low_priority_vol_filter_rate"
			},
			
			{
				name = "get_context_volume"
				operator = "opvar_get_float"
				input_execute = "1.0"
				execute_once = "1.0"
				input_stack_name = "citadel_dialog_volumes"
				input_operator_name = "opvars"
				input_field_name = "@public.context_name"
			},
			
			{
				name = "add_volume_offset"
				operator = "math_accumulate12_float"
				input_execute = "1.0"
				apply = "add"
				input1 = "@public.volume"
				input2 = "@volume_filter.output"
				input3 = "@get_context_volume.output"
				input4 = "@switch_health_volume.output"
				input5 = "0.0"
				input6 = "0.0"
				input7 = "0.0"
				input8 = "0.0"
				input9 = "0.0"
				input10 = "0.0"
				input11 = "0.0"
				input12 = "0.0"
			},
			
			{
				name = "citadel_perspective_default"
				operator = "sos_import_stack"
				import_stack = "citadel_perspective_default"
				auto_connect_public_fields = "true"
				operator_variables = 
				{
					volume = 
					{
						data_type = "float"
						value = "@add_volume_offset.output"
					}
				}
			},
			
			{
				name = "switch_debug_color"
				operator = "ctrl_switch_float3"
				input_switch = "@priority_less_than_max.output"
				input1 = "[3., 252., 111.]"
				input2 = "[252., 3., 82.]"
			},
			
			{
				name = "util_draw_debug_sphere"
				operator = "util_draw_debug_sphere"
				input_radius = "20.f"
				input_position = "@globals.output_listener_position"
				input_execute = "@convar_get_debug_enabled.output"
				input_rgb_color = "@switch_debug_color.output"
				input_label = ""
				input_show_detailed_info = "1.0"
				detail_label_1 = "pri"
				detail_value_1 = "@public.dialog_mix_priority"
				detail_label_2 = "vol"
				detail_value_2 = "@add_volume_offset.output"
				detail_label_3 = ""
				detail_value_3 = ""
				detail_label_4 = ""
				detail_value_4 = ""
				detail_label_5 = ""
				detail_value_5 = ""
				detail_label_6 = ""
				detail_value_6 = ""
				detail_label_7 = ""
				detail_value_7 = ""
				detail_label_8 = ""
				detail_value_8 = ""
			},
		]
		_system_properties = 
		{
			display_game = "citadel"
		}
	}
}