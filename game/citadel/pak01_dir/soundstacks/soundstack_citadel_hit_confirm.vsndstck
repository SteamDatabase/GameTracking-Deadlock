<!-- kv3 encoding:text:version{e21c7f3c-8a33-41c5-9977-a76d3a32aa0d} format:generic:version{7412167c-06e9-4698-aff2-e63eb59037e7} -->
{
	citadel_hit_confirm = 
	{
		operators = 
		[
			
			{
				name = "_builtins"
				operator = "sos_builtins"
				_voicegraph = "citadel.hrtf_basic"
			},
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					citadel_default_3d = 
					{
						data_type = "public_opvar"
						value = "citadel_default_3d"
					}
					citadel_find_perspective = 
					{
						data_type = "public_opvar"
						value = "citadel_find_perspective"
					}
					citadel_damage_info = 
					{
						data_type = "public_opvar"
						value = "citadel_damage_info"
					}
					hit_world = 
					{
						data_type = "bool"
						value = "true"
						_system_properties = 
						{
							display_group = "locked"
							property_group = "citadel_damage"
							property_help = "Set by code."
						}
					}
					block_on_hit_world = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "locked"
							property_group = "citadel_damage"
							property_help = "Set by code."
						}
					}
					block_team_owned_hit = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "locked"
							property_group = "citadel_damage"
							property_help = "Set by code."
						}
					}
					volume_falloff_min = 
					{
						data_type = "float"
						value = "250.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_damage - Volume"
							property_help = "Volume falloff min for all perspectives. Override from citadel_distance_falloff."
						}
					}
					volume_falloff_max_attacker = 
					{
						data_type = "float"
						value = "800.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_damage - Volume"
							property_help = "Volume falloff max while viewing attacker."
						}
					}
					volume_falloff_max_victim = 
					{
						data_type = "float"
						value = "99999.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_damage - Volume"
							property_help = "Volume falloff max while viewing victim."
						}
					}
					volume_falloff_max_other = 
					{
						data_type = "float"
						value = "800.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_damage - Volume"
							property_help = "Volume falloff max while viewing everyone else."
						}
					}
					mixer_mixgroup_attacker = 
					{
						data_type = "string"
						value = "Hit-Attacker"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_damage - Mixgroup"
							property_help = "The mixer mixgroup when viewing attacker."
						}
					}
					mixer_mixgroup_victim = 
					{
						data_type = "string"
						value = "Hit-Victim"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_damage - Mixgroup"
							property_help = "The mixer mixgroup when viewing victim."
						}
					}
					mixer_mixgroup_other = 
					{
						data_type = "string"
						value = "Hit-Other"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_damage - Mixgroup"
							property_help = "The mixer mixgroup when viewing everyone else."
						}
					}
					occlusion_scale_attacker = 
					{
						data_type = "float"
						value = "0.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_damage - Occlusion"
							property_help = "The value for occlusion scale when not viewing the victim."
						}
					}
					occlusion_scale_victim = 
					{
						data_type = "float"
						value = "0.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_damage - Occlusion"
							property_help = "The value for occlusion scale when not viewing the victim."
						}
					}
					occlusion_scale_other = 
					{
						data_type = "float"
						value = "1.0"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_damage - Occlusion"
							property_help = "The value for occlusion scale when not viewing the victim."
						}
					}
					spread_value_victim = 
					{
						data_type = "float"
						value = ".1"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "citadel_damage - Spread"
							property_help = "The value for spread when viewing the victim."
						}
					}
					volume_offset_attacker_db = 
					{
						data_type = "float"
						value = "0.f"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "Volume"
							property_help = "Volume in db offset for attacker."
						}
					}
					volume_offset_victim_db = 
					{
						data_type = "float"
						value = "0.f"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "Volume"
							property_help = "Volume in db offset for victim."
						}
					}
					volume_offset_other_db = 
					{
						data_type = "float"
						value = "0.f"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "Volume"
							property_help = "Volume in db offset for other."
						}
					}
					victim_is_npc = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "locked"
							property_group = "Volume"
							property_help = "Set in code."
						}
					}
					volume_offset_victim_is_npc_db = 
					{
						data_type = "float"
						value = "0.f"
						_system_properties = 
						{
							display_group = "Normal"
							property_group = "Volume"
							property_help = "The volume offset for attacker if the vicitim is an npc."
						}
					}
				}
			},
			
			{
				name = "citadel_find_perspective"
				operator = "sos_import_stack"
				import_stack = "citadel_find_perspective"
				auto_connect_public_fields = "true"
			},
			
			{
				name = "block_team_owned_hit_test"
				operator = "math_float"
				apply = "and"
				input1 = "@citadel_find_perspective::output.perspective_is_team"
				input2 = "@public.hit_world"
			},
			
			{
				name = "exec_block_team_owned"
				operator = "sos_goto"
				execute_once = "true"
				input_execute = "@block_team_owned_hit_test.output"
				input_goto_end = "true"
			},
			
			{
				name = "block_hit_world_test"
				operator = "math_float"
				apply = "and"
				input1 = "@public.block_on_hit_world"
				input2 = "@public.hit_world"
			},
			
			{
				name = "block_hit_world"
				operator = "sos_goto"
				execute_once = "true"
				input_execute = "@block_hit_world_test.output"
				input_goto_end = "true"
			},
			
			{
				name = "citadel_damage_info"
				operator = "sos_import_stack"
				import_stack = "citadel_damage_info"
				auto_connect_public_fields = "true"
			},
			
			{
				name = "switch_position"
				execute_once = "true"
				operator = "ctrl_switch3_float3"
				input_index = "@citadel_damage_info::output.damage_index"
				input0 = "@public.position"
				input1 = "@citadel_damage_info::get_attacker_info.output_position"
				input2 = "@public.position"
			},
			
			{
				name = "switch_mixgroup"
				execute_once = "true"
				operator = "ctrl_switch3_string"
				input_index = "@citadel_damage_info::output.damage_index"
				input1 = "@public.mixer_mixgroup_attacker"
				input2 = "@public.mixer_mixgroup_victim"
				input3 = "@public.mixer_mixgroup_other"
			},
			
			{
				name = "switch_vmix_send"
				execute_once = "true"
				operator = "ctrl_switch3_string"
				input_index = "@citadel_damage_info::output.damage_index"
				input1 = "main"
				input2 = "hit-victim-bus"
				input3 = "main"
			},
			
			{
				name = "switch_volume_falloff_max"
				execute_once = "true"
				operator = "ctrl_switch3_float"
				input_index = "@citadel_damage_info::output.damage_index"
				input0 = "@public.volume_falloff_max_attacker"
				input1 = "@public.volume_falloff_max_victim"
				input2 = "@public.volume_falloff_max_other"
			},
			
			{
				name = "switch_occlusion_scale"
				execute_once = "true"
				operator = "ctrl_switch3_float"
				input_index = "@citadel_damage_info::output.damage_index"
				input0 = "@public.occlusion_scale_attacker"
				input1 = "@public.occlusion_scale_victim"
				input2 = "@public.occlusion_scale_other"
			},
			
			{
				name = "switch_spread"
				execute_once = "true"
				operator = "ctrl_switch3_float"
				input_index = "@citadel_damage_info::output.damage_index"
				input0 = "0.0"
				input1 = "@public.spread_value_victim"
				input2 = "0.0"
			},
			
			{
				name = "switch_instance_attenuator_group_name"
				execute_once = "true"
				operator = "ctrl_switch3_string"
				input_index = "@citadel_damage_info::output.damage_index"
				input1 = "Hit-Attacker"
				input2 = "Hit-Victim"
				input3 = "Hit-Other"
			},
			
			{
				name = "logic_is_viewing_victim_or_attacker_and_not_hit_world"
				operator = "math_float"
				apply = "and_not"
				input1 = "@citadel_damage_info::output.is_viewing_attacker_or_vicitim"
				input2 = "@public.hit_world"
			},
			
			{
				name = "accumulate_npc_offset"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "1.0"
				input2 = "@public.victim_is_npc"
				input3 = "@public.volume_offset_victim_is_npc_db"
				input4 = "1.0"
				input5 = "1.0"
				input6 = "1.0"
				input7 = "1.0"
				input8 = "1.0"
				input9 = "1.0"
				input10 = "1.0"
				input11 = "1.0"
				input12 = "1.0"
			},
			
			{
				name = "accumulate_force_position_input"
				operator = "math_accumulate12_float"
				apply = "add"
				input1 = "@public.hit_world"
				input2 = "0.0"
				input3 = "@citadel_damage_info::output.is_viewing_attacker_or_vicitim"
				input4 = "@public.position_force_from_input"
				input5 = "0.0"
				input6 = "0.0"
				input7 = "0.0"
				input8 = "0.0"
				input9 = "0.0"
				input10 = "0.0"
				input11 = "0.0"
				input12 = "0.0"
			},
			
			{
				name = "check_force_position_input"
				operator = "math_float"
				apply = "greater_than"
				input1 = "@accumulate_force_position_input.output"
				input2 = "0.0"
			},
			
			{
				name = "switch_volume_offset"
				execute_once = "true"
				operator = "ctrl_switch3_float"
				input_index = "@citadel_damage_info::output.damage_index"
				input0 = "@public.volume_offset_attacker_db"
				input1 = "@public.volume_offset_victim_db"
				input2 = "@public.volume_offset_other_db"
			},
			
			{
				name = "math_volume_npc_offset"
				operator = "math_float"
				apply = "add"
				input1 = "@accumulate_npc_offset.output"
				input2 = "@switch_volume_offset.output"
			},
			
			{
				name = "math_volume_offset"
				operator = "math_float"
				apply = "add"
				input1 = "@public.volume"
				input2 = "@math_volume_npc_offset.output"
			},
			
			{
				name = "citadel_default_3d"
				operator = "sos_import_stack"
				import_stack = "citadel_default_3d"
				auto_connect_public_fields = "true"
				operator_variables = 
				{
					volume = 
					{
						data_type = "float"
						value = "@math_volume_offset.output"
					}
					volume_falloff_max = 
					{
						data_type = "float"
						value = "@switch_volume_falloff_max.output"
					}
					volume_falloff_floor = 
					{
						data_type = "float"
						value = "@logic_is_viewing_victim_or_attacker_and_not_hit_world.output"
					}
					position = 
					{
						data_type = "float3"
						value = "@switch_position.output"
					}
					position_force_from_input = 
					{
						data_type = "float"
						value = "@check_force_position_input.output"
					}
					distance_hpf_on = 
					{
						data_type = "float"
						value = "@citadel_damage_info::output.is_viewing_other"
					}
					distance_lpf_on = 
					{
						data_type = "float"
						value = "@citadel_damage_info::output.is_viewing_other"
					}
					hrtf_on = 
					{
						data_type = "float"
						value = "@citadel_damage_info::output.is_viewing_other"
					}
					mono_downmix_enabled = 
					{
						data_type = "float"
						value = "@citadel_damage_info::output.is_viewing_other"
					}
					occlusion_scale = 
					{
						data_type = "float"
						value = "@switch_occlusion_scale.output"
					}
					spread_max_value = 
					{
						data_type = "float"
						value = "@switch_spread.output"
					}
					spread_min_value = 
					{
						data_type = "float"
						value = "@switch_spread.output"
					}
					mixer_mixgroup = 
					{
						data_type = "string"
						value = "@switch_mixgroup.output"
					}
					instance_attenuator_name = 
					{
						data_type = "string"
						value = "@switch_instance_attenuator_group_name.output"
					}
					send_name = 
					{
						data_type = "string"
						value = "@switch_vmix_send.output"
					}
				}
			},
		]
		_system_properties = 
		{
			display_game = "citadel"
		}
	}
}